<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Quản lý thi đua khen thưởng</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta content="Responsive bootstrap 4 admin template" name="description" />
    <meta content="Coderthemes" name="author" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <!-- App favicon -->
    <link rel="shortcut icon" href="~/assets/images/favicon.ico">
    <!-- App css -->

    @Styles.Render("~/assets/css/default")

    <style>
        .colorEdit {
            color: #4667cc;
        }

        .colorCommon {
            color: #ff6a00;
        }

        #toast-container > div {
            opacity: 1;
            -ms-filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=100);
            filter: alpha(opacity=100);
        }

        #toast-container > .alert {
            background-image: none !important;
        }

            #toast-container > .alert:before {
                position: fixed;
                font-family: MaterialDesignIcons;
                font-size: 24px;
                float: left;
                color: #FFF;
                padding-right: 0.5em;
                margin: auto 0.5em auto -1.5em;
            }

        #toast-container > .alert-info:before {
            content: "\f05a";
        }

        #toast-container > .alert-info:before,
        #toast-container > .alert-info {
            color: #31708f;
        }

        #toast-container > .alert-success:before {
            content: "\f058";
        }

        #toast-container > .alert-success:before,
        #toast-container > .alert-success {
            color: #3c763d;
        }

        #toast-container > .alert-warning:before {
            content: "\f06a";
        }

        #toast-container > .alert-warning:before,
        #toast-container > .alert-warning {
            color: #8a6d3b;
        }

        #toast-container > .alert-danger:before {
            content: "\f071";
        }

        #toast-container > .alert-danger:before,
        #toast-container > .alert-danger {
            color: #a94442;
        }

        #overlay {
            position: fixed;
            top: 0;
            z-index: 100;
            width: 100%;
            height: 100%;
            display: none;
            background: rgba(0,0,0,0.6);
        }

        .cv-spinner {
            height: 100%;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .spinner {
            width: 40px;
            height: 40px;
            border: 4px #ddd solid;
            border-top: 4px #2e93e6 solid;
            border-radius: 50%;
            animation: sp-anime 0.8s infinite linear;
        }
    </style>
    @Scripts.Render("~/assets/js/default")
</head>
<body data-layout="horizontal">
    <div id="overlay">
        <div class="cv-spinner">
            <span class="spinner-border text-primary mt-2 mr-2"></span>
        </div>
    </div>

    <!-- Begin page -->
    <div id="wrapper">
        @Html.Partial("Header")
        <div class="content-page">
            <div class="content">
                @RenderBody()
            </div>
            <!-- Footer Start -->
            <footer class="footer">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-md-12">
                            @DateTime.Now.Year &copy; Trung tâm CNTT VNPT Quảng Bình
                        </div>
                    </div>
                </div>
            </footer>
            <!-- end Footer -->
        </div>
    </div>
    <script type="text/javascript">
        function activeMenu(classRoot, classNode) {
            @*$("#" + classRoot + "").toggleClass("active");
            $("#" + classNode + "").toggleClass("active");*@
        }

        function showToast(type, message, title) {
            var t, o, e = type,
                a = message,
                n = title || "",
                s = 300,
                i = 1000,
                r = 2000,
                l = 1000,
                c = "swing",
                p = "linear",
                d = "fadeIn",
                h = "fadeOut",
                g = false;
            toastr.options = {
                toastClass: 'alert',
                iconClasses: {
                    error: 'alert-error',
                    info: 'alert-info',
                    success: 'alert-success',
                    warning: 'alert-warning'
                },
                closeButton: true,
                debug: false,
                newestOnTop: true,
                progressBar: true,
                positionClass: "toast-bottom-right",
                preventDuplicates: false,
                onclick: null
            }, s > 0 && (toastr.options.showDuration = s), i > 0 && (toastr.options.hideDuration = i), r > 0 && (toastr.options.timeOut = g ? 0 : r), l > 0 && (toastr.options.extendedTimeOut = g ? 0 : l), c.length > 0 && (toastr.options.showEasing = c), p.length && (toastr.options.hideEasing = p), d.length && (toastr.options.showMethod = d), h.length && (toastr.options.hideMethod = h);
            var v = toastr[e](a, n);
            void 0 !== (k = v) && (v.find("#okBtn").length && v.delegate("#okBtn", "click", function () {
                alert("you clicked me. i was toast #" + u + ". goodbye!"), v.remove()
            }), v.find("#surpriseBtn").length && v.delegate("#surpriseBtn", "click", function () {
                alert("Surprise! you clicked me. i was toast #" + u + ". You could perform an action here.")
            }), v.find(".clear").length && v.delegate(".clear", "click", function () {
                toastr.clear(v, {
                    force: !0
                })
            }))
        }

        function convertDate(data) {
            var getdate = parseInt(data.replace("/Date(", "").replace(")/", ""));
            var ConvDate = new Date(getdate);

            let date, month, year;

            date = String(ConvDate.getDate()).padStart(2, '0');
            month = String(ConvDate.getMonth() + 1).padStart(2, '0'); // take care of the month's number here ⚠️
            year = ConvDate.getFullYear();
            console.log(month);
            return date + "/" + month + "/" + year;
        }

        function convertFullDate(data) {
            var dd = String(data.getDate()).padStart(2, '0');
            var mm = String(data.getMonth() + 1).padStart(2, '0'); //January is 0!
            var yyyy = data.getFullYear();

            today = dd + '/' + mm + '/' + yyyy;
            return today;
        }

    </script>
    @Scripts.Render("~/assets/js/application")
    @RenderSection("ViewSpecificJavascript", required: false)
    @RenderSection("scripts", required: false)
</body>
</html>
